{"version":3,"file":"static/js/643.bcacd736.chunk.js","mappings":"+QAEaA,EAAOC,EAAAA,EAAAA,KAAH,6FAMJC,EAAQD,EAAAA,EAAAA,MAAH,oEAKLE,EAAQF,EAAAA,EAAAA,MAAH,wEAKLG,EAAUH,EAAAA,EAAAA,OAAH,gJ,4ICVL,SAASI,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAGXC,GAASC,EAAAA,EAAAA,MACTC,GAAUD,EAAAA,EAAAA,MACVE,GAAaF,EAAAA,EAAAA,MAGbG,EAAe,SAACC,GAClB,MAAwBA,EAAEC,OAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACd,OAAQf,GACV,IAAK,OACHC,EAAQc,GACR,MAEF,IAAK,QACHZ,EAASY,GACT,MAEJ,IAAK,WACDV,EAAYU,GACZ,MAEF,QACE,OAEH,EAUH,OACM,UAAC,KAAD,CAAMC,SATW,SAACH,GAClBA,EAAEI,iBACFX,EAASY,EAAAA,GAAwB,CAAElB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAGG,WACI,SAAC,KAAD,CAAOc,QAASX,EAAhB,mBACA,SAAC,KAAD,CACEY,GAAIZ,EACJa,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,yIACJC,UAAQ,EACRT,MAAOf,EACTyB,SAAUb,KAGZ,SAAC,KAAD,CAAOO,QAAST,EAAhB,qBACA,SAAC,KAAD,CACEU,GAAIV,EACJW,KAAK,OACLrB,KAAK,QAGHwB,UAAQ,EACRT,MAAOb,EACTuB,SAAUb,KAGZ,SAAC,KAAD,CAAOO,QAASR,EAAhB,uBACA,SAAC,KAAD,CACES,GAAIT,EACJU,KAAK,OACLrB,KAAK,WAGHwB,UAAQ,EACRT,MAAOX,EACTqB,SAAUb,KAEZ,SAAC,KAAD,CAASS,KAAK,SAAd,wBAGX,C","sources":["components/Form.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Form = styled.form`\nwidth: 300px;\n    padding: 15px 15px;\n    border: 1px solid grey;\n`;\n\nexport const Lable = styled.label`\n    display: block;\n    font-weight: 500;\n`\n\nexport const Input = styled.input`\n    display: block;\n    margin: 5px 0 10px 0;\n`\n\nexport const BtnForm = styled.button`\n    padding: 3px 5px;\n    border-radius: 5px;\n    border: 1px solid grey;\n    font-size: 12px;\n    cursor: pointer;\n`;","import React from 'react'\nimport { useState } from \"react\";\nimport { nanoid } from 'nanoid'\nimport { useDispatch } from \"react-redux\";\nimport * as authOpetations from 'redux/auth/authOperations'\nimport { Form, Lable, Input, BtnForm } from 'components/Form.styled'\n\n\nexport default function Register() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n  \n    const dispatch = useDispatch();\n    // const contacts = useSelector(getContacts);\n\n    const nameId = nanoid();\n    const emailId = nanoid();\n    const passwordId = nanoid();\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n            \n    case 'password':\n        setPassword(value);\n        break;\n          \n      default:\n        return;\n        };\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(authOpetations.register({ name, email, password }));\n        setName('');\n        setEmail('');\n        setPassword('');\n    };\n\n  return (\n        <Form onSubmit={handleSubmit}>\n            <Lable htmlFor={nameId}>Name</Lable>\n            <Input\n              id={nameId}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n              onChange={handleChange}              \n            />\n              \n            <Lable htmlFor={emailId}>E-mail</Lable>\n            <Input\n              id={emailId}\n              type=\"text\"\n              name=\"email\"\n            //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            //   title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={email}\n              onChange={handleChange}              \n            />\n              \n            <Lable htmlFor={passwordId}>Password</Lable>\n            <Input\n              id={passwordId}\n              type=\"text\"\n              name=\"password\"\n            //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            //   title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={password}\n              onChange={handleChange}              \n            />\n            <BtnForm type=\"submit\">Register</BtnForm>\n          </Form>\n          )\n}\n"],"names":["Form","styled","Lable","Input","BtnForm","Register","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","nameId","nanoid","emailId","passwordId","handleChange","e","target","value","onSubmit","preventDefault","authOpetations","htmlFor","id","type","pattern","title","required","onChange"],"sourceRoot":""}