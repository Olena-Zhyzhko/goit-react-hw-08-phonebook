{"version":3,"file":"static/js/994.b43074ac.chunk.js","mappings":"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","sources":["components/Form.styled.jsx","components/ContactsList.styled.jsx","redux/selectors.js","components/Loader/Loader.jsx","components/ContactsList.jsx","components/Form.jsx","components/Filter.jsx","components/App.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Form = styled.form`\nwidth: 300px;\n    padding: 15px 15px;\n    border: 1px solid grey;\n`;\n\nexport const Lable = styled.label`\n    display: block;\n    font-weight: 500;\n`\n\nexport const Input = styled.input`\n    display: block;\n    margin: 5px 0 10px 0;\n`\n\nexport const BtnForm = styled.button`\n    padding: 3px 5px;\n    border-radius: 5px;\n    border: 1px solid grey;\n    font-size: 12px;\n    cursor: pointer;\n`;\nexport const BtnShow = styled.button`\n    padding: 2px 3px;\n    border-radius: 3px;\n    border: 1px solid grey;\n    font-size: 8px;\n    cursor: pointer;\n`;","import styled from '@emotion/styled'\n\nexport const List = styled.ul`\n    padding-left: 10px;\n`;\n\nexport const Item = styled.li`\n    width: 320px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 8px;\n    font-size: 16px;\n    font-weight: 500;\n`;\n\nexport const BtnDelete = styled.button`\n    padding: 3px 5px;\n    border-radius: 5px;\n    border: 1px solid grey;\n    font-size: 12px;\n    cursor: pointer;\n`;","export const getContacts = state => state.contacts.items;\nexport const getError = state => state.contacts.error;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getStatusFilter = state => state.filter;","import React from 'react'\nimport { ColorRing } from  'react-loader-spinner'\n\nexport default function Loader() {\n  return (\n      <div>\n        <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n      </div>\n  )\n}\n","import React from 'react'\nimport { List, Item, BtnDelete } from 'components/ContactsList.styled';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts, getStatusFilter, getError, getIsLoading } from '../redux/selectors'\nimport { useEffect } from 'react';\nimport * as contactsOpetations from 'redux/contacts/contactsOperations'\nimport Loader from 'components/Loader/Loader'\n\nexport const ContactsList = () => {\n    const dispatch = useDispatch();\n    const filterName = useSelector(getStatusFilter);\n    const contacts = useSelector(getContacts);\n    const error = useSelector(getError);\n    const loading = useSelector(getIsLoading);\n\n    useEffect(() => { dispatch(contactsOpetations.fetchContacts()) }, [dispatch]);\n\n    const getFilterContacts = () => {\n        if (!filterName) {\n            return contacts;\n        }\n\n        const normalizedFilter = filterName.toLocaleLowerCase();\n        const filtredContacts = contacts.filter(({ name }) =>\n            name.toLocaleLowerCase().includes(normalizedFilter));\n        return filtredContacts;\n    };\n\n    const contactsAfterFilter = getFilterContacts();\n\n    return (\n        <>\n        {error && <p>{error.message}</p>}\n        {loading && <Loader>Загружаем</Loader>}\n\n            <List>\n                { contactsAfterFilter.map(({ id, name, number }) => (\n                    <Item key={id}>{name}: {number}\n                        <BtnDelete type='button' onClick={() => dispatch(contactsOpetations.deleteContact(id))}>Delete</BtnDelete>\n                    </Item>\n                ))}\n            </List>\n\n        </>\n    )\n  }\n","import { useState } from \"react\";\nimport { nanoid } from 'nanoid'\nimport { Form, Lable, Input, BtnForm } from 'components/Form.styled'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from '../redux/selectors'\nimport * as contactsOpetations from 'redux/contacts/contactsOperations'\n\n\nexport function ContactForm() {\n    const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n    const nameId = nanoid();\n    const numberId = nanoid();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n          \n      default:\n        return;\n        };\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (contacts.some(contact => contact.name === name)) {\n            alert(`${name} is already in contacts`);\n            return\n        }\n\n      dispatch(contactsOpetations.addContact({ name, number }))\n        setName('');\n        setNumber('');\n    };\n\n  return (\n        <Form onSubmit={handleSubmit}>\n            <Lable htmlFor={nameId}>Name</Lable>\n            <Input\n              id={nameId}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n              onChange={handleChange}              \n            />\n            <Lable htmlFor={numberId}>Phone number</Lable>\n            <Input\n                id={numberId}\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handleChange}\n            />\n            <BtnForm type=\"submit\">Add contact</BtnForm>\n        </Form>  )\n}\n","import React from 'react'\nimport { nanoid } from 'nanoid'\nimport { Lable, Input } from 'components/Form.styled'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filter } from '../redux/filterSlice'\n\n\n\nexport const Filter = () => {\n  const filterId = nanoid();\n\n    const dispatch = useDispatch();\n  const filterName = useSelector(state => state.filter);\n\n    \n    return (\n        <div>\n            <Lable htmlFor={filterId}>Find contacts by name</Lable>\n            <Input\n                id={filterId}\n                type=\"text\"\n                name=\"filter\"\n                value={filterName}\n                onChange={(e) => {\n                    const { value } = e.target;\n                    dispatch(filter(value));\n                }}\n                // onBlur={() => dispatch(filter(''))}\n            />\n        </div>\n    )\n}\n  \n// Filter.propTypes = {\n//     filter: PropTypes.string,\n//     handleChange: PropTypes.func.isRequired,\n//     cleanFilter: PropTypes.func.isRequired,\n// }","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n    padding: 20px;\n`;","import React from 'react'\nimport { ContactsList } from 'components/ContactsList'\nimport { ContactForm } from 'components/Form'\nimport { Filter } from 'components/Filter'\nimport { Container } from 'components/App.styled'\n\n\n\nexport default function Contacts() {\n  return (\n      <div>\n        <Container>\n             <h1>Phonebook</h1>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter  />\n            <ContactsList />\n        </Container>\n      </div>\n  )\n}\n"],"names":["Form","styled","Lable","Input","BtnForm","BtnShow","List","Item","BtnDelete","getContacts","state","contacts","items","getError","error","getIsLoading","isLoading","getStatusFilter","filter","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ContactsList","dispatch","useDispatch","filterName","useSelector","loading","useEffect","contactsOpetations","contactsAfterFilter","normalizedFilter","toLocaleLowerCase","name","includes","getFilterContacts","message","map","id","number","type","onClick","ContactForm","useState","setName","setNumber","nameId","nanoid","numberId","handleChange","e","target","value","onSubmit","preventDefault","some","contact","alert","htmlFor","pattern","title","required","onChange","Filter","filterId","Container","Contacts"],"sourceRoot":""}