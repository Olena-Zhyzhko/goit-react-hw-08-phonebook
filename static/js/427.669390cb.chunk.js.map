{"version":3,"file":"static/js/427.669390cb.chunk.js","mappings":"ySAEaA,EAAOC,EAAAA,EAAAA,KAAH,6FAMJC,EAAQD,EAAAA,EAAAA,MAAH,oEAKLE,EAAQF,EAAAA,EAAAA,MAAH,wEAKLG,EAAUH,EAAAA,EAAAA,OAAH,iJAOPI,EAAUJ,EAAAA,EAAAA,OAAH,+I,2KChBJ,SAASK,IACrB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACF,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,WAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAGlBC,GAAUC,EAAAA,EAAAA,MACVC,GAAaD,EAAAA,EAAAA,MAGbE,EAAe,SAACC,GAClB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACV,IAAK,QACHhB,EAASiB,GACT,MAEF,IAAK,WACHf,EAAYe,GACZ,MAEF,QACE,OAEH,EASH,OACE,UAAC,KAAD,CAAKC,GAAG,OAAOC,GAAG,OAAlB,UACGZ,IACD,SAAC,KAAD,CAAMa,MAAM,MAAMC,SAAU,GAA5B,8DACE,UAAC,KAAD,CAAMC,SAXW,SAACR,GACpBA,EAAES,iBACAlB,EAASmB,EAAAA,GAAqB,CAAEzB,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,GACjB,EAMK,WACI,SAAC,KAAD,CAAOuB,QAASf,EAAhB,qBACI,SAAC,KAAD,CACEgB,GAAIhB,EACJiB,KAAK,OACLX,KAAK,QACHY,UAAQ,EACRX,MAAOlB,EACT8B,SAAUhB,KAGtB,SAAC,KAAD,CAAOY,QAASb,EAAhB,uBACE,UAAC,KAAD,YACI,SAAC,KAAD,CACEc,GAAId,EACJe,KAAMxB,EAAO,OAAS,WACtBa,KAAK,WACHY,UAAQ,EACRX,MAAOhB,EACT4B,SAAUhB,KAEZ,SAAC,KAAD,CAAmBiB,QAAQ,WAAW,kBAAgB,aAAaC,MAAM,OAAOC,IAAI,MAAMC,KAAK,MAAM,YAAU,MAA/G,UACI,SAAC,KAAD,CAAUC,QAAS,kBAAM9B,GAASD,EAAf,EAAnB,SACGA,EAAO,OAAS,eAKvB,SAAC,KAAD,CAASwB,KAAK,SAAd,wBAKX,C","sources":["components/Form.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Form = styled.form`\nwidth: 300px;\n    padding: 15px 15px;\n    border: 1px solid grey;\n`;\n\nexport const Lable = styled.label`\n    display: block;\n    font-weight: 500;\n`\n\nexport const Input = styled.input`\n    display: block;\n    margin: 5px 0 10px 0;\n`\n\nexport const BtnForm = styled.button`\n    padding: 3px 5px;\n    border-radius: 5px;\n    border: 1px solid grey;\n    font-size: 12px;\n    cursor: pointer;\n`;\nexport const BtnShow = styled.button`\n    padding: 2px 3px;\n    border-radius: 3px;\n    border: 1px solid grey;\n    font-size: 8px;\n    cursor: pointer;\n`;","import { useState } from \"react\";\nimport { nanoid } from 'nanoid'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as authOpetations from 'redux/auth/authOperations'\nimport { getErrorLogin } from 'redux/auth/authSelectors'\nimport { Form, Lable, Input, BtnForm, BtnShow } from 'components/Form.styled'\nimport { Box, Text, InputGroup, InputRightElement } from \"@chakra-ui/react\"\n\n\nexport  default function Login() {\n    const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = useState(false)\n  \n  const dispatch = useDispatch();\n  const error = useSelector(getErrorLogin);\n\n\n    const emailId = nanoid();\n    const passwordId = nanoid();\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n            \n      case 'password':\n        setPassword(value);\n        break;\n          \n      default:\n        return;\n        };\n    };\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n        dispatch(authOpetations.logIn({ email, password }));\n        setEmail('');\n        setPassword('');\n  };\n\n  return (\n    <Box py='20px' pl='20px'>\n      {error && \n      <Text color='red' fontSize={24}>Your login or password is incorrect. Try again.</Text>}\n        <Form onSubmit={handleSubmit}>\n            <Lable htmlFor={emailId}>E-mail</Lable>\n                <Input\n                  id={emailId}\n                  type=\"text\"\n                  name=\"email\"\n                    required\n                    value={email}\n                  onChange={handleChange}              \n                />\n              \n      <Lable htmlFor={passwordId}>Password</Lable>\n        <InputGroup >\n            <Input\n              id={passwordId}\n              type={show ? 'text' : 'password'}\n              name=\"password\"\n                required\n                value={password}\n              onChange={handleChange}              \n          />\n            <InputRightElement display='flexbox;' justify-content='flex-start' width='100%' top='3px' left='145' font-size='8px'>\n                <BtnShow  onClick={() => setShow(!show)}>\n                  {show ? 'Hide' : 'Show'}\n                </BtnShow>\n                  </InputRightElement>\n              </InputGroup>\n\n            <BtnForm type=\"submit\">LogIn</BtnForm>\n          </Form>\n      \n    </Box>\n          )\n}"],"names":["Form","styled","Lable","Input","BtnForm","BtnShow","Login","useState","email","setEmail","password","setPassword","show","setShow","dispatch","useDispatch","error","useSelector","getErrorLogin","emailId","nanoid","passwordId","handleChange","e","target","name","value","py","pl","color","fontSize","onSubmit","preventDefault","authOpetations","htmlFor","id","type","required","onChange","display","width","top","left","onClick"],"sourceRoot":""}