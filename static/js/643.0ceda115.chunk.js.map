{"version":3,"file":"static/js/643.0ceda115.chunk.js","mappings":"ySAEaA,EAAOC,EAAAA,EAAAA,KAAH,6FAMJC,EAAQD,EAAAA,EAAAA,MAAH,oEAKLE,EAAQF,EAAAA,EAAAA,MAAH,wEAKLG,EAAUH,EAAAA,EAAAA,OAAH,iJAOPI,EAAUJ,EAAAA,EAAAA,OAAH,+I,iKChBL,SAASK,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACF,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACE,GAAwBN,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,KAGMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,MACTC,GAAUD,EAAAA,EAAAA,MACVE,GAAaF,EAAAA,EAAAA,MAGbG,EAAe,SAACC,GAClB,MAAwBA,EAAEC,OAAlBhB,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,MACd,OAAQjB,GACV,IAAK,OACHC,EAAQgB,GACR,MAEF,IAAK,QACHd,EAASc,GACT,MAEJ,IAAK,WACDZ,EAAYY,GACZ,MAEF,QACE,OAEH,EAUH,OACE,SAAC,KAAD,CAASC,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAhC,UACI,UAAC,KAAD,CAAMC,SAVW,SAACN,GAClBA,EAAEO,iBACFd,EAASe,EAAAA,GAAwB,CAAEvB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAIG,WACI,SAAC,KAAD,CAAOmB,QAASd,EAAhB,mBACA,SAAC,KAAD,CACEe,GAAIf,EACJgB,KAAK,OACL1B,KAAK,OACL2B,QAAQ,yHACRC,MAAM,yIACJC,UAAQ,EACRZ,MAAOjB,EACT8B,SAAUhB,KAGZ,SAAC,KAAD,CAAOU,QAASZ,EAAhB,qBACA,SAAC,KAAD,CACEa,GAAIb,EACJc,KAAK,OACL1B,KAAK,QACH6B,UAAQ,EACRZ,MAAOf,EACT4B,SAAUhB,KAGZ,SAAC,KAAD,CAAOU,QAASX,EAAhB,uBACJ,UAAC,KAAD,YACI,SAAC,KAAD,CACEY,GAAIZ,EACJa,KAAMpB,EAAO,OAAS,WACtBN,KAAK,WACH6B,UAAQ,EACRZ,MAAOb,EACT0B,SAAUhB,KAEZ,SAAC,KAAD,CAAmBiB,QAAQ,WAAW,kBAAgB,aAAaC,MAAM,OAAOC,IAAI,MAAMC,KAAK,MAAM,YAAU,MAA/G,UACI,SAAC,KAAD,CAASR,KAAK,SAASS,QAAS,kBAAM5B,GAASD,EAAf,EAAhC,SACGA,EAAO,OAAS,eAIvB,SAAC,KAAD,CAASoB,KAAK,SAAd,0BAKX,C","sources":["components/Form.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Form = styled.form`\nwidth: 300px;\n    padding: 15px 15px;\n    border: 1px solid grey;\n`;\n\nexport const Lable = styled.label`\n    display: block;\n    font-weight: 500;\n`\n\nexport const Input = styled.input`\n    display: block;\n    margin: 5px 0 10px 0;\n`\n\nexport const BtnForm = styled.button`\n    padding: 3px 5px;\n    border-radius: 5px;\n    border: 1px solid grey;\n    font-size: 12px;\n    cursor: pointer;\n`;\nexport const BtnShow = styled.button`\n    padding: 2px 3px;\n    border-radius: 3px;\n    border: 1px solid grey;\n    font-size: 8px;\n    cursor: pointer;\n`;","import React from 'react'\nimport { useState } from \"react\";\nimport { nanoid } from 'nanoid'\nimport { useDispatch } from \"react-redux\";\nimport * as authOpetations from 'redux/auth/authOperations'\nimport { Form, Lable, Input, BtnForm, BtnShow } from 'components/Form.styled'\nimport { Box, InputGroup, InputRightElement } from '@chakra-ui/react';\n\n\nexport default function Register() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n    const [show, setShow] = useState(false)\n\n  \n    const dispatch = useDispatch();\n\n    const nameId = nanoid();\n    const emailId = nanoid();\n    const passwordId = nanoid();\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n            \n    case 'password':\n        setPassword(value);\n        break;\n          \n      default:\n        return;\n        };\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(authOpetations.register({ name, email, password }));\n        setName('');\n        setEmail('');\n        setPassword('');\n    };\n\n  return (\n    <Box     py='20px' pl='20px' mx=\"auto\">\n        <Form onSubmit={handleSubmit}>\n            <Lable htmlFor={nameId}>Name</Lable>\n            <Input\n              id={nameId}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n              onChange={handleChange}              \n            />\n              \n            <Lable htmlFor={emailId}>E-mail</Lable>\n            <Input\n              id={emailId}\n              type=\"text\"\n              name=\"email\"\n                required\n                value={email}\n              onChange={handleChange}              \n            />\n              \n            <Lable htmlFor={passwordId}>Password</Lable>\n        <InputGroup >\n            <Input\n              id={passwordId}\n              type={show ? 'text' : 'password'}\n              name=\"password\"\n                required\n                value={password}\n              onChange={handleChange}              \n          />\n            <InputRightElement display='flexbox;' justify-content='flex-start' width='100%' top='3px' left='145' font-size='8px'>\n                <BtnShow type=\"button\" onClick={() => setShow(!show)}>\n                  {show ? 'Hide' : 'Show'}\n                </BtnShow>\n                  </InputRightElement>\n              </InputGroup>\n            <BtnForm type=\"submit\">Register</BtnForm>\n          </Form>\n\n    </Box>\n          )\n}\n"],"names":["Form","styled","Lable","Input","BtnForm","BtnShow","Register","useState","name","setName","email","setEmail","password","setPassword","show","setShow","dispatch","useDispatch","nameId","nanoid","emailId","passwordId","handleChange","e","target","value","py","pl","mx","onSubmit","preventDefault","authOpetations","htmlFor","id","type","pattern","title","required","onChange","display","width","top","left","onClick"],"sourceRoot":""}